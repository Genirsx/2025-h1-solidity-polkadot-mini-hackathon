import { CompilerInput } from "hardhat/types";
import { ResolcConfig } from "../types";
export interface ICompiler {
    compile(input: CompilerInput, config: ResolcConfig): Promise<any>;
}
export declare function compile(resolcConfig: ResolcConfig, input: CompilerInput): Promise<any>;
export declare class BinaryCompiler implements ICompiler {
    config: ResolcConfig;
    constructor(config: ResolcConfig);
    compile(input: CompilerInput): Promise<any>;
}
export declare class NpmCompiler implements ICompiler {
    config: ResolcConfig;
    constructor(config: ResolcConfig);
    compile(input: CompilerInput): Promise<import("@parity/revive").SolcOutput>;
}
